<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: homework | Laura's Octopress Blog]]></title>
  <link href="http://1aurabrown.github.com/blog/categories/homework/atom.xml" rel="self"/>
  <link href="http://1aurabrown.github.com/"/>
  <updated>2013-02-06T16:56:44-05:00</updated>
  <id>http://1aurabrown.github.com/</id>
  <author>
    <name><![CDATA[Laura Brown]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Flatiron Days 1 &amp; 2 / Homework 1]]></title>
    <link href="http://1aurabrown.github.com/blog/2013/02/05/flatiron-days-1-and-2-slash-homework-1/"/>
    <updated>2013-02-05T22:03:00-05:00</updated>
    <id>http://1aurabrown.github.com/blog/2013/02/05/flatiron-days-1-and-2-slash-homework-1</id>
    <content type="html"><![CDATA[<p>Today marks day to of the Spring semester at Flatiron, and we're already doing lots. Yesterday we dove into using Git.  In teams of four, we created profile pages from a cloned repository containing a sample page, then modified it as we saw fit and merged our respective changes with our teammates and then the entire class. Git has always eluded me. Like many things, it is best to learn through doing, but I've never known where to start. It is much easier and more fun to jump in when you have a particular goal in mind, fellow learners around you and someone who can answer questions.</p>

<p>This morning we configured our programming environment to include everything we will need to get started, and customized aspects of bash and Sublime Test for efficiency. I can navigate Mac OS and the applications I use quite efficiently with key commands, gestures, hot corners, etc., but the shortcuts for these new applications will take some getting used to. It feels great to navigate quickly. For me, navigating my computer in the ways I've set up is no different than knowing how to type sentences quickly.</p>

<p>I think in the future I'll make a post about all my favorite ways in which my computer is customized, though they're all pretty minor, to be extremely helpful!</p>

<p>All this set-up and customization also reminds me of the few times when I've gone crazy finding and downloaded many many "productivity" applications, mostly as a form of procrastination, avoiding whatever it was I needed to do productively. This feels much better--there is no weight on my conscious that I am undermining my own productivity by seeking "productivity." Looking forward to coming to love or hate certain plug-ins and features.</p>

<p>Our day was broken up by a lunch-time field trip to <a href="http://pivotallabs.com/" title="Pivotal Labs">Pivitol Labs</a> where Avi (Flatiron teacher/dean) gave a talk about "The History of Code." I didn't have pen and paper with me, but I took a few pictures and opened a few browser tabs on my phone to search things that came to mind leaving them open to revisit now.</p>

<p>First of all, since reading "You Are Not a Gadget," I seem to always find my thoughts leading back to Jaron Lainer. Possibly because he covers a lot of ground in his writing, so it's not too difficult to relate any conversation about technology to ideas he addresses. Avi talked about the importance of the human side of coding. Code is made by--and should be made for--people, not machines. I sure can't argue with that. One quotation in the slide show stood out to me in particular: "The tools we use have a profound (and devious!) influence on our thinking habits, and, therefore, on our thinking abilities" (Edsger Dijkstra). I think the word "tools" is an apt choice--it applies to so many things but does not dilute the sentence's meaning. The spoken language a person uses to communicate verbally undoubtedly affects their thought process and behavour. The same is can be said of programming languages, so naturally we should use languages that promote effective thinking habits. These aren't just two parallel facts, they are inseperable. Dijkstra is also quoted as saying, "An exceptionally good master of one's native tongue is the most vital asset of a competent programmer."</p>

<p>I wonder what spoken language makes one best conditioned to write code? My guess would be English, since as far as I know most programming languages use english words. But in terms of grammar and syntax, I wonder how different spoken languages compare to different programming languages.</p>

<p>I hate when Malcolm Gladwell references are appropriate because I don't think he deserves any citations, but his books are great for picking up random facts to spit back out from time to time. In one of his books, maybe Outliers, he makes reference to a study proving that people who speak Japanese or Chinese as their first language are better at memorizing numbers because the names of numbers in whatever language are much more concise. Avi suggested that we as humans are capable of computing about 8 bits per second, and that if, in his example, we have to spend time remembering what a certain hash represents, rather than simply naming it something obvious, we are wasting vaulable brain processing power. I think this holds true! Similarly, <a href="http://boingboing.net/2013/01/14/sherlock.html" title="Sherlock">Sherlock Holmes and, apparently, scientists</a>suggest that our brains have a finite amount of memory. Sherlock Holmes' attic metaphor should be updated to comparing our brains to hard drives with only so many GB of space. But who knows, maybe this will change when the Singularity happens (if it hasn't already).</p>

<p>But back to Kijkstra and the tools we use affecting the way we think. The argument that code and computers should be accessible to humans lead to more human-friendly programming languages, the logical next step is the <a href="http://en.wikipedia.org/wiki/WIMP_(computing">advent of the first GUI</a> "WIMP".</p>
]]></content>
  </entry>
  
</feed>
